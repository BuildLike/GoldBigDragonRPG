package monster;

import java.util.Arrays;
import java.util.List;

import org.bukkit.ChatColor;
import org.bukkit.Effect;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.craftbukkit.v1_12_R1.entity.*;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.*;
import org.bukkit.event.entity.CreatureSpawnEvent;
import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.material.MaterialData;
import org.bukkit.potion.PotionEffectType;

import effect.PottionBuff;
import effect.SoundEffect;
import monster.ai.*;
import util.NumericUtil;
import util.YamlLoader;

public class MonsterSpawn
{
	public void entitySpawn(CreatureSpawnEvent event)
	{
		if(event.getLocation().getWorld().getName().equals("Dungeon"))
		{
			if(event.getSpawnReason() == SpawnReason.NATURAL || event.getSpawnReason() == SpawnReason.CHUNK_GEN
					|| event.getSpawnReason() == SpawnReason.MOUNT|| event.getSpawnReason() == SpawnReason.JOCKEY
					|| event.getSpawnReason() == SpawnReason.SLIME_SPLIT)
			{
				event.setCancelled(true);
				return;
			}
		}
		
		if(event.getEntity().getType()==EntityType.ARMOR_STAND)
			return;
		
		if(event.getSpawnReason() == SpawnReason.SLIME_SPLIT &&
				event.getEntity().getCustomName() != null &&
				main.MainServerOption.MonsterNameMatching.containsKey(event.getEntity().getCustomName()))
			event.setCancelled(true);
		
		area.AreaAPI areaApi = new area.AreaAPI();
		String[] areaNameArrays = areaApi.getAreaName(event.getEntity());
		
		YamlLoader areaYaml = new YamlLoader();
		if(areaNameArrays != null)
		{
			if( ! areaApi.getAreaOption(areaNameArrays[0], (char) 3))
			{
				event.setCancelled(true);
				return;
			}
			else if( ! areaApi.getAreaOption(areaNameArrays[0], (char) 8))
			{
				areaYaml.getConfig("Area/AreaList.yml");
				String areaName = areaApi.getAreaName(event.getEntity())[0];
				String[] mobNameArrays = areaYaml.getConfigurationSection(areaName+".Monster").getKeys(false).toArray(new String[0]);
				int randomMob = 0;
				NumericUtil nu = new NumericUtil();
				for(int count = 0; count < 10; count++)
				{
					if(mobNameArrays.length != 0)
					{
						randomMob = nu.RandomNum(0, mobNameArrays.length-1);
						if(main.MainServerOption.MonsterList.containsKey(mobNameArrays[randomMob]))
						{
							new monster.MonsterSpawn().spawnMonster(event.getLocation(), mobNameArrays[randomMob], (byte) -1, null,(char) -1, false);
							break;
						}
						else
						{
							areaYaml.removeKey(areaName+".Monster."+mobNameArrays[randomMob]);
							areaYaml.saveConfig();
						}
					}
					else
						break;
				}
			}
		}
		YamlLoader configYaml = new YamlLoader();
	    configYaml.getConfig("config.yml");
		new monster.MonsterSpawn().SpawnEffect(event.getEntity(),event.getLocation(), (byte) configYaml.getInt("Server.MonsterSpawnEffect"));
		return;
	}
	
	public void createMonster(String monsterName)
	{
		ItemStack item = new ItemStack(Material.AIR);
		YamlLoader monsterYaml = new YamlLoader();
		monsterYaml.getConfig("Monster/MonsterList.yml");
		
		monsterYaml.set(monsterName+".Name", monsterName);
		monsterYaml.set(monsterName+".Type", "Á»ºñ");
		monsterYaml.set(monsterName+".AI", "ÀÏ¹Ý Çàµ¿");
		monsterYaml.set(monsterName+".EXP", 15);
		monsterYaml.set(monsterName+".Biome", "NULL");
		monsterYaml.set(monsterName+".HP", 20);
		monsterYaml.set(monsterName+".MIN_Money", 1);
		monsterYaml.set(monsterName+".MAX_Money", 10);
		monsterYaml.set(monsterName+".STR", 10);
		monsterYaml.set(monsterName+".DEX", 10);
		monsterYaml.set(monsterName+".INT", 10);
		monsterYaml.set(monsterName+".WILL", 10);
		monsterYaml.set(monsterName+".LUK", 10);
		monsterYaml.set(monsterName+".DEF", 0);
		monsterYaml.set(monsterName+".Protect", 0);
		monsterYaml.set(monsterName+".Magic_DEF", 0);
		monsterYaml.set(monsterName+".Magic_Protect", 0);
		monsterYaml.set(monsterName+".Head.DropChance", 0);
		monsterYaml.set(monsterName+".Head.Item", item);
		monsterYaml.set(monsterName+".Chest.DropChance", 0);
		monsterYaml.set(monsterName+".Chest.Item", item);
		monsterYaml.set(monsterName+".Leggings.DropChance", 0);
		monsterYaml.set(monsterName+".Leggings.Item", item);
		monsterYaml.set(monsterName+".Boots.DropChance", 0);
		monsterYaml.set(monsterName+".Boots.Item", item);
		monsterYaml.set(monsterName+".Hand.DropChance", 0);
		monsterYaml.set(monsterName+".Hand.Item", item);
		monsterYaml.set(monsterName+".OffHand.DropChance", 0);
		monsterYaml.set(monsterName+".OffHand.Item", item);
		monsterYaml.saveConfig();
		return;
	}

	public void stayLive(Entity e, boolean isStayLive)
	{
		if(e.getType()!=EntityType.ENDER_CRYSTAL && !e.isDead())
		{
			LivingEntity le = (LivingEntity) e;
			le.setRemoveWhenFarAway(isStayLive);
		}
	}
	
	public void spawnMonster(Location loc, String monsterName, byte dungeonSpawning, int[] xyzLoc, char group, boolean isStayLive)
	{
		if(monsterName.charAt(0)=='³ï')
		{
			String type = monsterName.substring(1);
			monsterName = null;
			createCreature(type, loc, monsterName, dungeonSpawning, xyzLoc, group, isStayLive);
		}
		loc.add(0.5, 1, 0.5);
		YamlLoader monsterYaml = new YamlLoader();
		monsterYaml.getConfig("Monster/MonsterList.yml");
		String type = monsterYaml.getString(monsterName + ".Type");
		if(monsterYaml.getString(monsterName+".Name")!=null)
		{
			String aiString = monsterYaml.getString(monsterName + ".AI");
			int ai = 0;
			
			if(aiString.equals("¹«³ú¾Æ"))
				ai = 3;
			else if(aiString.equals("µ¿¹°"))
				ai = 4;
			else if(aiString.equals("¼±°ø"))
				ai = 1;
			else if(aiString.equals("ºñ¼±°ø"))
				ai = 2;
			
			if(!(aiString.equals("¼±°ø")||aiString.equals("ºñ¼±°ø")||aiString.equals("¹«³ú¾Æ")||aiString.equals("µ¿¹°")||aiString.equals("ÀÏ¹Ý Çàµ¿")))
			{
				monsterYaml.set(monsterName + ".AI", "ÀÏ¹Ý Çàµ¿");
				monsterYaml.saveConfig();
			}
			if(!aiString.equals("ÀÏ¹Ý Çàµ¿"))
			{
				LivingEntity entity = null;
				if(type.equals("Á»ºñ"))
					entity = (CraftZombie) CustomZombie.spawn(loc, ai);
				else if(type.equals("ÀÚÀÌ¾ðÆ®"))
					entity = (CraftGiant) CustomGiant.spawn(loc, ai);
				else if(type.equals("½ºÄÌ·¹Åæ"))
					entity = (CraftSkeleton) CustomSkeleton.spawn(loc, ai);
				else if(type.equals("³×´õ½ºÄÌ·¹Åæ"))
					entity = (CraftWitherSkeleton) CustomWitherSkeleton.spawn(loc, ai);
				else if(type.equals("¿£´õ¸Ç"))
					entity = (CraftEnderman) CustomEnderman.spawn(loc, ai);
				else if(type.equals("Å©¸®ÆÛ")||type.equals("¹ø°³Å©¸®ÆÛ"))
					entity = (CraftCreeper) CustomCreeper.spawn(loc, ai);
				else if(type.equals("°Å¹Ì"))
					entity = (CraftSpider) CustomSpider.spawn(loc, ai);
				else if(type.equals("µ¿±¼°Å¹Ì"))
					entity = (CraftCaveSpider) CustomCaveSpider.spawn(loc, ai);
				else if(type.equals("Á»¹ú·¹"))
					entity = (CraftSilverfish) CustomSilverFish.spawn(loc, ai);
				else if(type.equals("¿£´õÁøµå±â"))
					entity = (CraftEndermite) CustomEnderMite.spawn(loc, ai);
				else if(type.equals("ºí·¹ÀÌÁî"))
					entity = (CraftBlaze) CustomBlaze.spawn(loc, ai);
				else if(type.equals("Á»ºñÇÇ±×¸Ç"))
					entity = (CraftPigZombie) CustomPigZombie.spawn(loc, ai);
				else if(type.equals("¸¶³à"))
					entity = (CraftWitch) CustomWitch.spawn(loc, ai);
				else if(type.equals("À§´õ"))
					entity = (CraftWither) CustomWither.spawn(loc, ai);
				else if(type.equals("¼öÈ£ÀÚ"))
					entity = (CraftGuardian) CustomGuardian.spawn(loc, ai);
				else if(type.equals("ºÏ±Ø°õ"))
					entity = (CraftPolarBear) CustomPolarBear.spawn(loc, ai);
				else if(type.equals("¿£´õÅ©¸®½ºÅ»"))
					createCreature(type, loc, monsterName, dungeonSpawning, xyzLoc, group, isStayLive);

				else if (type.equals("¿¤´õ°¡µð¾ð"))
					entity = (CraftElderGuardian) CustomElderGuardian.spawn(loc, ai);
				else if (type.equals("½ºÆ®·¹ÀÌ"))
					entity = (CraftStray) CustomStray.spawn(loc, ai);
				else if (type.equals("Çã½ºÅ©"))
					entity = (CraftHusk) CustomHusk.spawn(loc, ai);
				else if (type.equals("ÁÖ¹ÎÁ»ºñ"))
					entity = (CraftVillagerZombie) CustomZombieVillager.spawn(loc, ai);
				else if (type.equals("¼ÒÈ¯»ç"))
					entity = (CraftEvoker) CustomEvoker.spawn(loc, ai);
				else if (type.equals("º¤½º"))
					entity = (CraftVex) CustomVex.spawn(loc, ai);
				else if (type.equals("º¯¸íÀÚ"))
					entity = (CraftVindicator) CustomVindicator.spawn(loc, ai);
				else if (type.equals("¼ÈÄ¿"))
					entity = (Shulker) CustomShulker.spawn(loc, ai);
				// ¸ó½ºÅÍ ÇüÅÂÀÇ ¸÷
				else if (type.equals("½ºÄÌ·¹Åæ¸»"))
					entity = (LivingEntity) CustomSkeletonHorse.spawn(loc, ai);
				else if (type.equals("Á»ºñ¸»"))
					entity = (LivingEntity) CustomZombieHorse.spawn(loc, ai);
				else if (type.equals("´ç³ª±Í"))
					entity = (LivingEntity) CustomDonkey.spawn(loc, ai);
				else if (type.equals("³ë»õ"))
					entity = (LivingEntity) CustomMule.spawn(loc, ai);
				else if (type.equals("ÀÎ°£"))
					entity = (LivingEntity) CustomHuman.spawn(loc, ai);
				else if (type.equals("¹ÚÁã"))
					entity = (LivingEntity) CustomBat.spawn(loc, ai);
				else if (type.equals("µÅÁö"))
					entity = (LivingEntity) CustomPig.spawn(loc, ai);
				else if (type.equals("¾ç"))
					entity = (LivingEntity) CustomSheep.spawn(loc, ai);
				else if (type.equals("¼Ò"))
					entity = (LivingEntity) CustomCow.spawn(loc, ai);
				else if (type.equals("´ß"))
					entity = (LivingEntity) CustomChicken.spawn(loc, ai);
				else if (type.equals("¿ÀÂ¡¾î"))
					entity = (LivingEntity) CustomSquid.spawn(loc, ai);
				else if (type.equals("´Á´ë"))
					entity = (LivingEntity) CustomWolf.spawn(loc, ai);
				else if (type.equals("¹ö¼¸¼Ò"))
					entity = (LivingEntity) CustomMooshroom.spawn(loc, ai);
				else if (type.equals("´«»ç¶÷"))
					entity = (LivingEntity) CustomSnowman.spawn(loc, ai);
				else if (type.equals("¿À¼¿·Ô"))
					entity = (LivingEntity) CustomOcelot.spawn(loc, ai);
				else if (type.equals("Ã¶°ñ·½"))
					entity = (LivingEntity) CustomIronGolem.spawn(loc, ai);
				else if (type.equals("¸»"))
					entity = (LivingEntity) CustomHorse.spawn(loc, ai);
				else if (type.equals("Åä³¢"))
					entity = (LivingEntity) CustomRabbit.spawn(loc, ai);
				else if (type.equals("¶ó¸¶"))
					entity = (LivingEntity) CustomLlama.spawn(loc, ai);
				else if (type.equals("ÁÖ¹Î"))
					entity = (LivingEntity) CustomVillager.spawn(loc, ai);

				if(entity!=null)
					entity = getEntity(entity, monsterName, dungeonSpawning, xyzLoc, group);
			}
			else
				createCreature(type, loc, monsterName, dungeonSpawning, xyzLoc, group, isStayLive);
		}
		return;
	}
	
	private void createCreature(String type, Location loc, String mob, byte dungeonSpawning, int[] xyzLoc, char group, boolean isStayLive)
	{
		switch(type)
		{
			case "Á»ºñ":{Zombie zombie = (Zombie) loc.getWorld().spawn(loc, Zombie.class);zombie = (Zombie) getEntity(zombie,mob, dungeonSpawning, xyzLoc, group);}break;
			case "ÀÚÀÌ¾ðÆ®":{Giant giant = (Giant) loc.getWorld().spawn(loc, Giant.class);giant = (Giant) getEntity(giant,mob, dungeonSpawning, xyzLoc, group);stayLive(giant, isStayLive);}break;
			case "½ºÄÌ·¹Åæ":{Skeleton skeleton = (Skeleton) loc.getWorld().spawn(loc, Skeleton.class);skeleton = (Skeleton) getEntity(skeleton,mob, dungeonSpawning, xyzLoc, group);stayLive(skeleton, isStayLive);}break;
			case "³×´õ½ºÄÌ·¹Åæ":{WitherSkeleton skeleton = (WitherSkeleton) loc.getWorld().spawn(loc, WitherSkeleton.class);skeleton = (WitherSkeleton) getEntity(skeleton,mob, dungeonSpawning, xyzLoc, group);stayLive(skeleton, isStayLive);}break;
			case "¿£´õ¸Ç":{Enderman enderman = (Enderman) loc.getWorld().spawn(loc, Enderman.class);enderman = (Enderman) getEntity(enderman,mob, dungeonSpawning, xyzLoc, group);stayLive(enderman, isStayLive);}break;
			case "Å©¸®ÆÛ":{Creeper creeper = (Creeper) loc.getWorld().spawn(loc, Creeper.class);creeper = (Creeper) getEntity(creeper,mob, dungeonSpawning, xyzLoc, group);stayLive(creeper, isStayLive);}break;
			case "¹ø°³Å©¸®ÆÛ":{Creeper Lcreeper = (Creeper) loc.getWorld().spawn(loc, Creeper.class);Lcreeper = (Creeper) getEntity(Lcreeper,mob, dungeonSpawning, xyzLoc, group);stayLive(Lcreeper, isStayLive);}break;
			case "°Å¹Ì":{Spider spider = (Spider) loc.getWorld().spawn(loc, Spider.class);spider = (Spider) getEntity(spider,mob, dungeonSpawning, xyzLoc, group);stayLive(spider, isStayLive);}break;
			case "µ¿±¼°Å¹Ì":{CaveSpider cavespider = (CaveSpider) loc.getWorld().spawn(loc, CaveSpider.class);cavespider = (CaveSpider) getEntity(cavespider,mob, dungeonSpawning, xyzLoc, group);stayLive(cavespider, isStayLive);}break;
			case "Á»¹ú·¹":{Silverfish silverfish = (Silverfish) loc.getWorld().spawn(loc, Silverfish.class);silverfish = (Silverfish) getEntity(silverfish,mob, dungeonSpawning, xyzLoc, group);stayLive(silverfish, isStayLive);}break;
			case "¿£´õÁøµå±â":{Endermite endermite = (Endermite) loc.getWorld().spawn(loc, Endermite.class);endermite = (Endermite) getEntity(endermite,mob, dungeonSpawning, xyzLoc, group);stayLive(endermite, isStayLive);}break;
			case "½½¶óÀÓ":case "ÃÊ´ëÇü½½¶óÀÓ": case "Æ¯´ë½½¶óÀÓ": case "Å«½½¶óÀÓ": case "º¸Åë½½¶óÀÓ": case "ÀÛÀº½½¶óÀÓ":{Slime Sslime = (Slime) loc.getWorld().spawn(loc, Slime.class);Sslime = (Slime) getEntity(Sslime,mob, dungeonSpawning, xyzLoc, group);stayLive(Sslime, isStayLive);}break;
			case "¸¶±×¸¶Å¥ºê": case "ÃÊ´ëÇü¸¶±×¸¶Å¥ºê":case "Æ¯´ë¸¶±×¸¶Å¥ºê": case "Å«¸¶±×¸¶Å¥ºê": case "º¸Åë¸¶±×¸¶Å¥ºê": case "ÀÛÀº¸¶±×¸¶Å¥ºê":{MagmaCube Smagmacube = (MagmaCube) loc.getWorld().spawn(loc, MagmaCube.class);Smagmacube = (MagmaCube) getEntity(Smagmacube,mob, dungeonSpawning, xyzLoc, group);stayLive(Smagmacube, isStayLive);}break;
			case "ºí·¹ÀÌÁî":{Blaze blaze = (Blaze) loc.getWorld().spawn(loc, Blaze.class);blaze = (Blaze) getEntity(blaze,mob, dungeonSpawning, xyzLoc, group);stayLive(blaze, isStayLive);}break;
			case "°¡½ºÆ®":{Ghast ghast = (Ghast) loc.getWorld().spawn(loc, Ghast.class);ghast = (Ghast) getEntity(ghast,mob, dungeonSpawning, xyzLoc, group);stayLive(ghast, isStayLive);}break;
			case "Á»ºñÇÇ±×¸Ç":{PigZombie pigzombie = (PigZombie) loc.getWorld().spawn(loc, PigZombie.class);pigzombie = (PigZombie) getEntity(pigzombie,mob, dungeonSpawning, xyzLoc, group);stayLive(pigzombie, isStayLive);}break;
			case "¸¶³à":{Witch witch = (Witch) loc.getWorld().spawn(loc, Witch.class);witch = (Witch) getEntity(witch,mob, dungeonSpawning, xyzLoc, group);stayLive(witch, isStayLive);}break;
			case "À§´õ":{Wither wither = (Wither) loc.getWorld().spawn(loc, Wither.class);wither = (Wither) getEntity(wither,mob, dungeonSpawning, xyzLoc, group);stayLive(wither, isStayLive);}break;
			case "¿£´õµå·¡°ï":{EnderDragon ED = (EnderDragon) loc.getWorld().spawn(loc, EnderDragon.class);ED = (EnderDragon) getEntity(ED,mob, dungeonSpawning, xyzLoc, group);stayLive(ED, isStayLive);}break;
			case "¿£´õÅ©¸®½ºÅ»":{EnderCrystal EC = (EnderCrystal) loc.getWorld().spawn(loc, EnderCrystal.class);EC = getEnderCrystal(EC,mob, dungeonSpawning, xyzLoc, group);stayLive(EC, isStayLive);}break;
			case "¼öÈ£ÀÚ":{Guardian guardian = (Guardian) loc.getWorld().spawn(loc, Guardian.class);guardian = (Guardian) getEntity(guardian,mob, dungeonSpawning, xyzLoc, group);stayLive(guardian, isStayLive);}break;
			case "¾ç":{Sheep sheep = (Sheep) loc.getWorld().spawn(loc, Sheep.class);sheep = (Sheep) getEntity(sheep,mob, dungeonSpawning, xyzLoc, group);stayLive(sheep, isStayLive);}break;
			case "¼Ò":{Cow cow = (Cow) loc.getWorld().spawn(loc, Cow.class);cow = (Cow) getEntity(cow,mob, dungeonSpawning, xyzLoc, group);stayLive(cow, isStayLive);}break;
			case "µÅÁö":{Pig pig = (Pig) loc.getWorld().spawn(loc, Pig.class);pig = (Pig) getEntity(pig,mob, dungeonSpawning, xyzLoc, group);stayLive(pig, isStayLive);}break;
			case "¸»":{Horse horse = (Horse) loc.getWorld().spawn(loc, Horse.class);horse = (Horse) getEntity(horse,mob, dungeonSpawning, xyzLoc, group);stayLive(horse, isStayLive);}break;
			case "Åä³¢":{Rabbit rabbit = (Rabbit) loc.getWorld().spawn(loc, Rabbit.class);rabbit = (Rabbit) getEntity(rabbit,mob, dungeonSpawning, xyzLoc, group);stayLive(rabbit, isStayLive);}break;
			case "¿À¼¿·Ô":{Ocelot oceleot = (Ocelot) loc.getWorld().spawn(loc, Ocelot.class);oceleot = (Ocelot) getEntity(oceleot,mob, dungeonSpawning, xyzLoc, group);stayLive(oceleot, isStayLive);}break;
			case "´Á´ë":{Wolf wolf = (Wolf) loc.getWorld().spawn(loc, Wolf.class);wolf = (Wolf) getEntity(wolf,mob, dungeonSpawning, xyzLoc, group);stayLive(wolf, isStayLive);}break;
			case "´ß":{Chicken chicken = (Chicken) loc.getWorld().spawn(loc, Chicken.class);chicken = (Chicken) getEntity(chicken,mob, dungeonSpawning, xyzLoc, group);stayLive(chicken, isStayLive);}break;
			case "¹ö¼¸¼Ò":{MushroomCow Mcow = (MushroomCow) loc.getWorld().spawn(loc, MushroomCow.class);Mcow = (MushroomCow) getEntity(Mcow,mob, dungeonSpawning, xyzLoc, group);stayLive(Mcow, isStayLive);}break;
			case "¹ÚÁã":{Bat bat = (Bat) loc.getWorld().spawn(loc, Bat.class);bat = (Bat) getEntity(bat,mob, dungeonSpawning, xyzLoc, group);stayLive(bat, isStayLive);}break;
			case "¿ÀÂ¡¾î":{Squid squid = (Squid) loc.getWorld().spawn(loc, Squid.class);squid = (Squid) getEntity(squid,mob, dungeonSpawning, xyzLoc, group);stayLive(squid, isStayLive);}break;
			case "ÁÖ¹Î":{Villager villager = (Villager) loc.getWorld().spawn(loc, Villager.class);villager = (Villager) getEntity(villager,mob, dungeonSpawning, xyzLoc, group);stayLive(villager, isStayLive);}break;
			case "´«»ç¶÷":{Snowman snowman = (Snowman) loc.getWorld().spawn(loc, Snowman.class);snowman = (Snowman) getEntity(snowman,mob, dungeonSpawning, xyzLoc, group);stayLive(snowman, isStayLive);}break;
			case "Ã¶°ñ·½":{IronGolem golem = (IronGolem) loc.getWorld().spawn(loc, IronGolem.class);golem = (IronGolem) getEntity(golem,mob, dungeonSpawning, xyzLoc, group);stayLive(golem, isStayLive);}break;
			case "¼ÈÄ¿":{Shulker shulker = (Shulker) loc.getWorld().spawn(loc, Shulker.class);shulker = (Shulker) getEntity(shulker,mob, dungeonSpawning, xyzLoc, group);stayLive(shulker, isStayLive);}break;
			case "ºÏ±Ø°õ":{PolarBear polarBear = (PolarBear) loc.getWorld().spawn(loc, PolarBear.class);polarBear = (PolarBear) getEntity(polarBear,mob, dungeonSpawning, xyzLoc, group);stayLive(polarBear, isStayLive);}break;
			
			case "¿¤´õ°¡µð¾ð":{ElderGuardian elderGuardian = (ElderGuardian) loc.getWorld().spawn(loc, ElderGuardian.class);elderGuardian = (ElderGuardian) getEntity(elderGuardian,mob, dungeonSpawning, xyzLoc, group);stayLive(elderGuardian, isStayLive);}break;
			case "½ºÆ®·¹ÀÌ":{Stray stray = (Stray) loc.getWorld().spawn(loc, Stray.class);stray = (Stray) getEntity(stray,mob, dungeonSpawning, xyzLoc, group);stayLive(stray, isStayLive);}break;
			case "Çã½ºÅ©":{Husk husk = (Husk) loc.getWorld().spawn(loc, Husk.class);husk = (Husk) getEntity(husk,mob, dungeonSpawning, xyzLoc, group);stayLive(husk, isStayLive);}break;
			case "ÁÖ¹ÎÁ»ºñ":{ZombieVillager zombiVillager = (ZombieVillager) loc.getWorld().spawn(loc, ZombieVillager.class);zombiVillager = (ZombieVillager) getEntity(zombiVillager,mob, dungeonSpawning, xyzLoc, group);stayLive(zombiVillager, isStayLive);}break;
			case "¼ÒÈ¯»ç":{Evoker evoker = (Evoker) loc.getWorld().spawn(loc, Evoker.class);evoker = (Evoker) getEntity(evoker,mob, dungeonSpawning, xyzLoc, group);stayLive(evoker, isStayLive);}break;
			case "º¤½º":{Vex vex = (Vex) loc.getWorld().spawn(loc, Vex.class);vex = (Vex) getEntity(vex,mob, dungeonSpawning, xyzLoc, group);stayLive(vex, isStayLive);}break;
			case "º¯¸íÀÚ":{Vindicator polarBear = (Vindicator) loc.getWorld().spawn(loc, Vindicator.class);polarBear = (Vindicator) getEntity(polarBear,mob, dungeonSpawning, xyzLoc, group);stayLive(polarBear, isStayLive);}break;
			case "½ºÄÌ·¹Åæ¸»":{SkeletonHorse skeletonHorse = (SkeletonHorse) loc.getWorld().spawn(loc, SkeletonHorse.class);skeletonHorse = (SkeletonHorse) getEntity(skeletonHorse,mob, dungeonSpawning, xyzLoc, group);stayLive(skeletonHorse, isStayLive);}break;
			case "Á»ºñ¸»":{ZombieHorse zombieHorse = (ZombieHorse) loc.getWorld().spawn(loc, ZombieHorse.class);zombieHorse = (ZombieHorse) getEntity(zombieHorse,mob, dungeonSpawning, xyzLoc, group);stayLive(zombieHorse, isStayLive);}break;
			case "´ç³ª±Í":{Donkey donkey = (Donkey) loc.getWorld().spawn(loc, Donkey.class);donkey = (Donkey) getEntity(donkey,mob, dungeonSpawning, xyzLoc, group);stayLive(donkey, isStayLive);}break;
			case "³ë»õ":{Mule mule = (Mule) loc.getWorld().spawn(loc, Mule.class);mule = (Mule) getEntity(mule,mob, dungeonSpawning, xyzLoc, group);stayLive(mule, isStayLive);}break;
			case "ÀÎ°£":{Player player = (Player) loc.getWorld().spawn(loc, Player.class);player = (Player) getEntity(player,mob, dungeonSpawning, xyzLoc, group);stayLive(player, isStayLive);}break;
			case "¶ó¸¶":{Llama llama = (Llama) loc.getWorld().spawn(loc, Llama.class);llama = (Llama) getEntity(llama,mob, dungeonSpawning, xyzLoc, group);stayLive(llama, isStayLive);}break;
			//case "ÈÞ¸Õ":{HumanEntity human = (HumanEntity) loc.getWorld().spawn(loc, Player.class);human = (HumanEntity) getEntity(human,mob, DungeonSpawning, XYZLoc, Group);StayLive(human, isStayLive);}break;
		}
	}

	private LivingEntity getEntity(LivingEntity monster, String monsterName, byte dungeonSpawning, int[] xyzLoc, char group)
	{
		if(monsterName!=null)
		{
			YamlLoader monsterYaml = new YamlLoader();
			monsterYaml.getConfig("Monster/MonsterList.yml");
			monster.setCustomName(monsterYaml.getString(monsterName + ".Name").replace("&", "¡×"));
			monster.setCustomNameVisible(true);
			String[] parts = {"Head", "Chest", "Leggings", "Boots", "Hand", "OffHand"};
			ItemStack item = null;
			ItemStack[] equipments = new ItemStack[parts.length];
			for(int count = 0; count < parts.length; count++)
			{
				item = monsterYaml.getItemStack(monsterName+"." + parts[count] + ".Item");
				if(item != null && ! (item.hasItemMeta() && item.getItemMeta().hasLore() &&
						ChatColor.stripColor(item.getItemMeta().getLore().get(0)).equals("ÀÌ°÷¿¡ ¾ÆÀÌÅÛÀ» ³Ö¾î ÁÖ¼¼¿ä.")))
					equipments[count] = item;
				else
					equipments[count] = null;
			}
			monster.getEquipment().setHelmet(equipments[0]);
			monster.getEquipment().setChestplate(equipments[1]);
			monster.getEquipment().setLeggings(equipments[2]);
			monster.getEquipment().setBoots(equipments[3]);
			monster.getEquipment().setItemInMainHand(equipments[4]);
			monster.getEquipment().setItemInOffHand(equipments[5]);
			
			YamlLoader configYaml = new YamlLoader();
		    configYaml.getConfig("config.yml");
			monster.getEquipment().setHelmetDropChance((float)(monsterYaml.getInt(monsterName+".Head.DropChance")*configYaml.getInt("Event.DropChance")/1000.0));
			monster.getEquipment().setChestplateDropChance((float)(monsterYaml.getInt(monsterName+".Chest.DropChance")*configYaml.getInt("Event.DropChance")/1000.0));
			monster.getEquipment().setLeggingsDropChance((float)(monsterYaml.getInt(monsterName+".Leggings.DropChance")*configYaml.getInt("Event.DropChance")/1000.0));
			monster.getEquipment().setBootsDropChance((float)(monsterYaml.getInt(monsterName+".Boots.DropChance")*configYaml.getInt("Event.DropChance")/1000.0));
			monster.getEquipment().setItemInMainHandDropChance((float)(monsterYaml.getInt(monsterName+".Hand.DropChance")*configYaml.getInt("Event.DropChance")/1000.0));
			monster.getEquipment().setItemInOffHandDropChance((float)(monsterYaml.getInt(monsterName+".OffHand.DropChance")*configYaml.getInt("Event.DropChance")/1000.0));
			
			if(monster.getType() == EntityType.CREEPER)
			{
				if(monsterYaml.getString(monsterName+".Type").equalsIgnoreCase("¹ø°³Å©¸®ÆÛ"))
					  ((Creeper) monster).setPowered(true);
			}
			else if(monster.getType() == EntityType.SLIME)
			{
				switch(monsterYaml.getString(monsterName + ".Type"))
				{
					case "ÀÛÀº½½¶óÀÓ" : ((Slime) monster).setSize(1);break;
					case "º¸Åë½½¶óÀÓ" : ((Slime) monster).setSize(2);break;
					case "Å«½½¶óÀÓ" : ((Slime) monster).setSize(4);break;
					case "Æ¯´ë½½¶óÀÓ" : ((Slime) monster).setSize(16);break;
					case "ÃÊ´ëÇü½½¶óÀÓ" : ((Slime) monster).setSize(64);break;
					default : ((Slime) monster).setSize(new util.NumericUtil().RandomNum(1, 4));break;
				}
			}
			else if(monster.getType() == EntityType.MAGMA_CUBE)
			{
				switch(monsterYaml.getString(monsterName + ".Type"))
				{
					case "ÀÛÀº¸¶±×¸¶Å¥ºê" : ((MagmaCube) monster).setSize(1);break;
					case "º¸Åë¸¶±×¸¶Å¥ºê" : ((MagmaCube) monster).setSize(2);break;
					case "Å«¸¶±×¸¶Å¥ºê" : ((MagmaCube) monster).setSize(4);break;
					case "Æ¯´ë¸¶±×¸¶Å¥ºê" : ((MagmaCube) monster).setSize(16);break;
					case "ÃÊ´ëÇü¸¶±×¸¶Å¥ºê" : ((MagmaCube) monster).setSize(64);break;
					default : ((MagmaCube) monster).setSize(new util.NumericUtil().RandomNum(1, 4));break;
				}
			}
			if(monsterYaml.contains(monsterName+".Potion"))
			{
				if(monsterYaml.getInt(monsterName+".Potion.Regenerate")!=0)
					monster.addPotionEffect(PottionBuff.getPotionEffect(PotionEffectType.REGENERATION, 50000, monsterYaml.getInt(monsterName+".Potion.Regenerate")));
				if(monsterYaml.getInt(monsterName+".Potion.Poison")!=0)
					monster.addPotionEffect(PottionBuff.getPotionEffect(PotionEffectType.POISON, 50000, monsterYaml.getInt(monsterName+".Potion.Poison")));
				if(monsterYaml.getInt(monsterName+".Potion.Speed")!=0)
					monster.addPotionEffect(PottionBuff.getPotionEffect(PotionEffectType.SPEED, 50000, monsterYaml.getInt(monsterName+".Potion.Speed")));
				if(monsterYaml.getInt(monsterName+".Potion.Slow")!=0)
					monster.addPotionEffect(PottionBuff.getPotionEffect(PotionEffectType.SLOW, 50000, monsterYaml.getInt(monsterName+".Potion.Slow")));
				if(monsterYaml.getInt(monsterName+".Potion.Strength")!=0)
					monster.addPotionEffect(PottionBuff.getPotionEffect(PotionEffectType.INCREASE_DAMAGE, 50000, monsterYaml.getInt(monsterName+".Potion.Strength")));
				if(monsterYaml.getInt(monsterName+".Potion.Weak")!=0)
					monster.addPotionEffect(PottionBuff.getPotionEffect(PotionEffectType.WEAKNESS, 50000, monsterYaml.getInt(monsterName+".Potion.Weak")));
				if(monsterYaml.getInt(monsterName+".Potion.JumpBoost")!=0)
					monster.addPotionEffect(PottionBuff.getPotionEffect(PotionEffectType.JUMP, 50000, monsterYaml.getInt(monsterName+".Potion.JumpBoost")));
				if(monsterYaml.getInt(monsterName+".Potion.FireRegistance")!=0)
					monster.addPotionEffect(PottionBuff.getPotionEffect(PotionEffectType.FIRE_RESISTANCE, 50000, monsterYaml.getInt(monsterName+".Potion.FireRegistance")));
				if(monsterYaml.getInt(monsterName+".Potion.WaterBreath")!=0)
					monster.addPotionEffect(PottionBuff.getPotionEffect(PotionEffectType.WATER_BREATHING, 50000, monsterYaml.getInt(monsterName+".Potion.WaterBreath")));
				if(monsterYaml.getInt(monsterName+".Potion.Invisible")!=0)
					monster.addPotionEffect(PottionBuff.getPotionEffect(PotionEffectType.INVISIBILITY, 50000, monsterYaml.getInt(monsterName+".Potion.Invisible")));
			}
			Damageable m = monster;
			m.setMaxHealth(monsterYaml.getInt(monsterName + ".HP")+0.5);
			m.setHealth(m.getMaxHealth());
		}
		
		if(dungeonSpawning != -1)
		{
			YamlLoader monsterYaml = new YamlLoader();
			monsterYaml.getConfig("Monster/MonsterList.yml");
			/*
    		¸ó½ºÅÍ ½Äº° ÄÚµå ÀÌÈÄ ¿À´Â GroupNumber ÄÚµå´Â °¢°¢ÀÇ ¸ó½ºÅÍ ±×·ìÀ» ¼³Á¤ÇÏ±â À§ÇÔÀ¸·Î,
    		¹æ ³»¿¡ ±×·ì ÄÚµå°¡ ºÙÀº ¸ó½ºÅÍ°¡ ¹Ý°æ 20 ÀÌ³»¿¡ ¾øÀ» °æ¿ì, ´ÙÀ½ ¿þÀÌºê°¡ ³ª¿À°Å³ª
    		¹®ÀÌ ¿­¸®°Ô µÈ´Ù. ¸ó½ºÅÍ ±×·ì ÄÚµå´Â 0 ~ f ±îÁö Á¸ÀçÇÑ´Ù.
			 */
			if(monsterName==null)
			{
				switch(dungeonSpawning)
				{
				case 1://1¹ø == ÀÏ¹Ý
					monster.setCustomName("¡×2¡×0¡×2¡×e¡×"+group+"¡×f");
					break;
				case 2://2¹ø == ´ÙÀ½ ¿þÀÌºê Á¸Àç
					monster.setCustomName("¡×2¡×0¡×2¡×1¡×"+group+"¡×f");
					break;
				case 3://3¹ø == ¿­¼è °¡Áø ³ð
					monster.setCustomName("¡×2¡×0¡×2¡×4¡×"+group+"¡×f");
					break;
				case 4://4¹ø == º¸½º [º¸½º¹æ ¹®À» Å½ÁöÇÏ±â À§ÇØ¼­ º¸»ó¹æ Ã¶Ã¢ Áß¾ÓÀÇ À§Ä¡¸¦ ´øÀü ÄÜÇÇ±×¿¡ ÀúÀå ½ÃÅ²´Ù.]
					monster.setCustomName("¡×2¡×0¡×2¡×2¡×"+group+"¡×f");
					break;
				}
			}
			else
			{
				String a = monsterYaml.getString(monsterName + ".Name").replace("&", "¡×");
				switch(dungeonSpawning)
				{
				case 1://1¹ø == ÀÏ¹Ý
					monster.setCustomName("¡×2¡×0¡×2¡×e¡×"+group+"¡×f"+a);
					break;
				case 2://2¹ø == ´ÙÀ½ ¿þÀÌºê Á¸Àç
					monster.setCustomName("¡×2¡×0¡×2¡×1¡×"+group+"¡×f"+a);
					break;
				case 3://3¹ø == ¿­¼è °¡Áø ³ð
					monster.setCustomName("¡×2¡×0¡×2¡×4¡×"+group+"¡×f"+a);
					break;
				case 4://4¹ø == º¸½º [º¸½º¹æ ¹®À» Å½ÁöÇÏ±â À§ÇØ¼­ º¸»ó¹æ Ã¶Ã¢ Áß¾ÓÀÇ À§Ä¡¸¦ ´øÀü ÄÜÇÇ±×¿¡ ÀúÀå ½ÃÅ²´Ù.]
					monster.setCustomName("¡×2¡×0¡×2¡×2¡×"+group+"¡×f"+a);
					break;
				}
			}
			ItemStack helmet = monsterYaml.getItemStack(monsterName+".Head.Item");
			int itemnumber = 30;
			if(helmet!=null && helmet.getType() != Material.AIR)
			{
				if(helmet.hasItemMeta())
				{
					ItemMeta im = helmet.getItemMeta();
					im.setLore(Arrays.asList("xyz:"+xyzLoc[0]+","+xyzLoc[1]+","+xyzLoc[2]));
					helmet.setItemMeta(im);
					monster.getEquipment().setHelmet(helmet);
				}
				else
				{
					ItemStack item = new MaterialData(267, (byte) 0).toItemStack(1);
					ItemMeta im = item.getItemMeta();
					im.setLore(Arrays.asList("xyz:"+xyzLoc[0]+","+xyzLoc[1]+","+xyzLoc[2]));
					helmet.setItemMeta(im);
					monster.getEquipment().setHelmet(helmet);
				}
			}
			else
			{
				ItemStack item = new ItemStack(itemnumber);
				item.setAmount(1);
				ItemMeta im = item.getItemMeta();
				im.setLore(Arrays.asList("xyz:"+xyzLoc[0]+","+xyzLoc[1]+","+xyzLoc[2]));
				item.setItemMeta(im);
				monster.getEquipment().setHelmet(item);
			}
			monster.getEquipment().setHelmetDropChance(0.00000000000000000F);
		}
		return monster;
	}
	
	private EnderCrystal getEnderCrystal(EnderCrystal monster, String mob, byte dungeonSpawning, int[] xyzLoc, char group)
	{
		YamlLoader monsterYaml = new YamlLoader();
		monsterYaml.getConfig("Monster/MonsterList.yml");
		if(dungeonSpawning != -1)
		{
			/*
    		¸ó½ºÅÍ ½Äº° ÄÚµå ÀÌÈÄ ¿À´Â GroupNumber ÄÚµå´Â °¢°¢ÀÇ ¸ó½ºÅÍ ±×·ìÀ» ¼³Á¤ÇÏ±â À§ÇÔÀ¸·Î,
    		¹æ ³»¿¡ ±×·ì ÄÚµå°¡ ºÙÀº ¸ó½ºÅÍ°¡ ¹Ý°æ 20 ÀÌ³»¿¡ ¾øÀ» °æ¿ì, ´ÙÀ½ ¿þÀÌºê°¡ ³ª¿À°Å³ª
    		¹®ÀÌ ¿­¸®°Ô µÈ´Ù. ¸ó½ºÅÍ ±×·ì ÄÚµå´Â 0 ~ f ±îÁö Á¸ÀçÇÑ´Ù.
			 */
			if(mob.charAt(0)=='³ï')
			{
				switch(dungeonSpawning)
				{
				case 1://1¹ø == ÀÏ¹Ý
					monster.setCustomName("¡×2¡×0¡×2¡×e¡×"+group+"¡×f");
					break;
				case 2://2¹ø == ´ÙÀ½ ¿þÀÌºê Á¸Àç
					monster.setCustomName("¡×2¡×0¡×2¡×1¡×"+group+"¡×f");
					break;
				case 3://3¹ø == ¿­¼è °¡Áø ³ð
					monster.setCustomName("¡×2¡×0¡×2¡×4¡×"+group+"¡×f");
					break;
				case 4://4¹ø == º¸½º [º¸½º¹æ ¹®À» Å½ÁöÇÏ±â À§ÇØ¼­ º¸»ó¹æ Ã¶Ã¢ Áß¾ÓÀÇ À§Ä¡¸¦ ´øÀü ÄÜÇÇ±×¿¡ ÀúÀå ½ÃÅ²´Ù.]
					monster.setCustomName("¡×2¡×0¡×2¡×2¡×"+group+"¡×f");
					break;
				}
			}
			else
			{
				String a = monsterYaml.getString(mob + ".Name").replace("&", "¡×");
				switch(dungeonSpawning)
				{
				case 1://1¹ø == ÀÏ¹Ý
					monster.setCustomName("¡×2¡×0¡×2¡×e¡×"+group+"¡×f"+a);
					break;
				case 2://2¹ø == ´ÙÀ½ ¿þÀÌºê Á¸Àç
					monster.setCustomName("¡×2¡×0¡×2¡×1¡×"+group+"¡×f"+a);
					break;
				case 3://3¹ø == ¿­¼è °¡Áø ³ð
					monster.setCustomName("¡×2¡×0¡×2¡×4¡×"+group+"¡×f"+a);
					break;
				case 4://4¹ø == º¸½º [º¸½º¹æ ¹®À» Å½ÁöÇÏ±â À§ÇØ¼­ º¸»ó¹æ Ã¶Ã¢ Áß¾ÓÀÇ À§Ä¡¸¦ ´øÀü ÄÜÇÇ±×¿¡ ÀúÀå ½ÃÅ²´Ù.]
					monster.setCustomName("¡×2¡×0¡×2¡×2¡×"+group+"¡×f"+a);
					break;
				}
			}
		}
		else
			monster.setCustomName(monsterYaml.getString(mob + ".Name").replace("&", "¡×"));
		monster.setCustomNameVisible(true);
		return monster;
	}

	
	private static void stack(String display, int id, int data, int amount, List<String> lore, int loc, Inventory inventory)
	{
		ItemStack item = new ItemStack(id);
		item.setAmount(amount);
		item.setDurability((short) data);
		ItemMeta im = item.getItemMeta();
		im.setDisplayName(display);
		im.setLore(lore);
		item.setItemMeta(im);
		inventory.setItem(loc, item);
		return;
	}
	
	public void spawnEggGive(Player player, String mob)
	{
		ItemStack item = new ItemStack(383);
		item.setAmount(1);
		item.setDurability((short)0);
		ItemMeta im = item.getItemMeta();
		im.setDisplayName("¡×c"+mob);
		im.addEnchant(Enchantment.DURABILITY, 1, true);
		im.setLore(Arrays.asList("¡×8"+mob+"½ºÆù ¿¡±×"));
		item.setItemMeta(im);
		player.getInventory().addItem(item);
		player.sendMessage("¡×e[SYSTEM] : "+ChatColor.GREEN+mob +"¡×e½ºÆù ¿¡±×¸¦ ¾ò¾ú½À´Ï´Ù!");
		return;
	}
	
	public void SpawnEffect (Entity mob,Location loc, byte type)
	{
		
		effect.ParticleEffect p = new effect.ParticleEffect();
		switch(type)
		{
		case 0: return;
		case 1:
			{
				SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_ENDERDRAGON_GROWL, 1.0F, 0.5F);
				for(int counter=0;counter<400;counter++)
				p.PLC(loc, Effect.SPELL, 4);
				for(int counter=0;counter<300;counter++)
				p.PLC(loc, Effect.FLYING_GLYPH, 0);
				for(int counter=0;counter<200;counter++)
				p.PLC(loc, Effect.SMOKE, 4);
			}
			return;
		case 2:
			{
				loc.setY((double)(loc.getBlockY()+1));
				SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_ENDERMEN_TELEPORT, 1.0F, 0.5F);
				p.PLC(loc, Effect.ENDER_SIGNAL, 0);
				for(int counter=0;counter<100;counter++)
				p.PLC(loc, Effect.ENDER_SIGNAL, 0);
				for(int counter=0;counter<50;counter++)
				p.PLC(loc, Effect.MAGIC_CRIT, 4);
			}
			return;
		case 3:
			{
				SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_GENERIC_EXPLODE, 1.0F, 0.5F);
				p.PLC(loc, Effect.EXPLOSION_LARGE, 0);
				for(int counter=0;counter<3;counter++)
				p.PLC(loc, Effect.EXPLOSION_HUGE, 0);
				for(int counter=0;counter<10;counter++)
				p.PLC(loc, Effect.EXPLOSION, 4);
			}
			return;
		case 4:
			{
				SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_GHAST_SHOOT, 1.0F, 0.5F);
				p.PLC(loc, Effect.FLAME, 0);
				for(int counter=0;counter<200;counter++)
				p.PLC(loc, Effect.SMOKE, 9);
				for(int counter=0;counter<200;counter++)
				p.PLC(loc, Effect.FLAME, 0);
			}
			return;
		case 5:
			{
				SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_ZOMBIE_ATTACK_IRON_DOOR, 1.0F, 0.6F);
				p.PLC(loc, Effect.CRIT, 0);
				for(int counter=0;counter<400;counter++)
				p.PLC(loc, Effect.SPELL, 4);
				loc.setY((double)(loc.getBlockY()+1.5));
				for(int counter=0;counter<1;counter++)
				p.PLC(loc, Effect.VILLAGER_THUNDERCLOUD, counter);
			}
			return;
		case 6:
			{
				SoundEffect.playSoundLocation(loc, org.bukkit.Sound.BLOCK_CHEST_OPEN, 1.0F, 0.5F);
				loc.setY((double)(loc.getBlockY()+1.8));
				p.PLC(loc, Effect.HEART, 0);
			}
			return;
		case 7:
			{
				switch(mob.getType())
				{
				case ZOMBIE :
				case GIANT :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_ZOMBIE_AMBIENT, 1.0F, 0.5F);
						loc.setY((double)(loc.getBlockY()+1.8));
						p.PLC(loc, Effect.VILLAGER_THUNDERCLOUD, 0);
						for(int counter=0;counter<50;counter++)
							p.PLC(loc, Effect.MAGIC_CRIT, counter);
					}
					break;
				case SKELETON :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_SKELETON_DEATH, 1.0F, 0.5F);
						loc.setY((double)(loc.getBlockY()+1.8));
						p.PLC(loc, Effect.VILLAGER_THUNDERCLOUD, 0);
						for(int counter=0;counter<50;counter++)
							p.PLC(loc, Effect.MAGIC_CRIT, counter);
					}
					break;
				case ENDERMAN :
				case ENDERMITE :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_ENDERMEN_TELEPORT, 1.0F, 0.5F);
						loc.setY((double)(loc.getBlockY()+1));
						for(int counter=0;counter<100;counter++)
							p.PLC(loc, Effect.ENDER_SIGNAL, 0);
					}
					break;
				case CREEPER :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_GENERIC_EXPLODE, 1.0F, 0.5F);
						loc.setY((double)(loc.getBlockY()+1));
						p.PLC(loc, Effect.EXPLOSION_LARGE, 0);
						for(int counter=0;counter<3;counter++)
						p.PLC(loc, Effect.EXPLOSION_HUGE, counter);
						for(int counter=0;counter<5;counter++)
						p.PLC(loc, Effect.EXPLOSION, counter);
					}
					break;
				case SPIDER :
				case CAVE_SPIDER :
				case SILVERFISH:
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_SPIDER_AMBIENT, 1.0F, 0.5F);
						for(int counter=0;counter<10;counter++)
						p.PLC(loc, Effect.LARGE_SMOKE, counter);
						loc.setY((double)(loc.getBlockY()+1));
						p.PLC(loc, Effect.SMOKE, 0);
					}
					break;
				case SLIME:
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_SLIME_JUMP, 1.0F, 0.5F);
						loc.setY((double)(loc.getBlockY()+1));
						for(int counter=0;counter<20;counter++)
						p.PLC(loc, Effect.SLIME, counter);
					}
					break;
				case MAGMA_CUBE:
					{
						loc.setY((double)(loc.getBlockY()+1));
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_SLIME_JUMP, 1.0F, 0.5F);
						for(int counter=0;counter<40;counter++)
						p.PLC(loc, Effect.MOBSPAWNER_FLAMES, counter);
					}
					break;
				case BLAZE :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_BLAZE_AMBIENT, 1.0F, 0.5F);
						for(int counter=0;counter<200;counter++)
						p.PLC(loc, Effect.SMOKE, 9);
						for(int counter=0;counter<200;counter++)
						p.PLC(loc, Effect.FLAME, 0);
					}
					break;
				case GHAST :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_GHAST_AMBIENT, 1.0F, 0.5F);
						p.PLC(loc, Effect.FLAME, 0);
						for(int counter=0;counter<100;counter++)
							p.PLC(loc, Effect.SMOKE, 4);
						for(int counter=0;counter<40;counter++)
						p.PLC(loc, Effect.MOBSPAWNER_FLAMES, counter);
					}
					break;
				case PIG_ZOMBIE :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_ZOMBIE_AMBIENT, 1.0F, 0.5F);
						for(int counter=0;counter<100;counter++)
							p.PLC(loc, Effect.SMOKE, 4);
						for(int counter=0;counter<40;counter++)
						p.PLC(loc, Effect.MOBSPAWNER_FLAMES, counter);
					}
					break;
				case WITCH:
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_WITCH_AMBIENT, 1.0F, 0.5F);
						for(int counter=0;counter<400;counter++)
						p.PLC(loc, Effect.SPELL, 4);
						for(int counter=0;counter<300;counter++)
						p.PLC(loc, Effect.FLYING_GLYPH, 0);
						for(int counter=0;counter<200;counter++)
						p.PLC(loc, Effect.SMOKE, 4);
					}
					break;
				case GUARDIAN :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_GUARDIAN_AMBIENT, 1.0F, 0.5F);
						for(int counter=0;counter<400;counter++)
						p.PLC(loc, Effect.WATERDRIP, counter);
					}
					break;
				case SNOWMAN :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_SNOWMAN_AMBIENT, 1.0F, 0.5F);
						for(int counter=0;counter<200;counter++)
						p.PLC(loc, Effect.SNOWBALL_BREAK, counter);
					}
					break;
					case SHULKER :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_SHULKER_AMBIENT, 1.0F, 0.5F);
						for(int counter=0;counter<400;counter++)
						p.PLC(loc, Effect.ENDER_SIGNAL, counter);
					}
					break;
					case POLAR_BEAR :
					{
						SoundEffect.playSoundLocation(loc, org.bukkit.Sound.ENTITY_POLAR_BEAR_AMBIENT, 1.0F, 0.5F);
						for(int counter=0;counter<200;counter++)
						p.PLC(loc, Effect.VILLAGER_THUNDERCLOUD, counter);
					}
					break;
				}
			}
			return;
		}
		return;
	}
	
	public short getMonsterID(String monsterType)
	{
		switch(monsterType)
		{
			case "Á»ºñ":
				return 54;
			case "ÀÚÀÌ¾ðÆ®":
				return 53;
			case "³×´õ½ºÄÌ·¹Åæ":
			case "½ºÄÌ·¹Åæ":
				return 51;
			case "¿£´õ¸Ç":
				return 58;
			case "¹ø°³Å©¸®ÆÛ":
			case "Å©¸®ÆÛ":
				return 50;
			case "°Å¹Ì":
				return 52;
			case "µ¿±¼°Å¹Ì":
				return 59;
			case "Á»¹ú·¹":
				return 60;
			case "¿£´õÁøµå±â":
				return 67;
			case "ÃÊ´ëÇü½½¶óÀÓ": case "Æ¯´ë½½¶óÀÓ": case "Å«½½¶óÀÓ": case "º¸Åë½½¶óÀÓ": case "ÀÛÀº½½¶óÀÓ": 
				return 55;
			case "Æ¯´ë¸¶±×¸¶Å¥ºê": case "Å«¸¶±×¸¶Å¥ºê": case "º¸Åë¸¶±×¸¶Å¥ºê": case "ÀÛÀº¸¶±×¸¶Å¥ºê": case "¸¶±×¸¶Å¥ºê":
				return 62;
			case "ºí·¹ÀÌÁî":
				return 61;
			case "°¡½ºÆ®":
				return 56;
			case "Á»ºñÇÇ±×¸Ç":
				return 57;
			case "¸¶³à":
				return 66;
			case "À§´õ":
				return 64;
			case "¿£´õµå·¡°ï":
				return 63;
			case "¿£´õÅ©¸®½ºÅ»":
				return -50;
			case "¼öÈ£ÀÚ":
				return 68;
			case "¾ç":
				return 91;
			case "¼Ò":
				return 92;
			case "µÅÁö":
				return 90;
			case "¸»":
				return 100;
			case "Åä³¢":
				return 101;
			case "¿À¼¿·Ô":
				return 98;
			case "´Á´ë":
				return 95;
			case "´ß":
				return 93;
			case "¹ö¼¸¼Ò":
				return 96;
			case "¿ÀÂ¡¾î":
				return 94;
			case "ÁÖ¹Î":
				return 120;
			case "´«»ç¶÷":
				return 97;
			case "°ñ·½":
				return 99;
			case "¹ÚÁã":
				return 65;
			case "¼ÈÄ¿":
				return 69;
			case "ºÏ±Ø°õ":
				return 102;
			case "ÈÞ¸Õ":
				return 49;
			default : return -60;
		}
	}

	public String getMonsterCustomName(String monsterType)
	{
		switch(monsterType)
		{
			case "Á»ºñ":
				return "CUSTOMZOMBIE";
			case "ÀÚÀÌ¾ðÆ®":
				return "CUSTOMGIANT";
			case "³×´õ½ºÄÌ·¹Åæ":
			case "½ºÄÌ·¹Åæ":
				return "CUSTOMSKELETON";
			case "¿£´õ¸Ç":
				return "CUSTOMENDERMAN";
			case "¹ø°³Å©¸®ÆÛ":
			case "Å©¸®ÆÛ":
				return "CUSTOMCREEPER";
			case "°Å¹Ì":
				return "CUSTOMSPIDER";
			case "µ¿±¼°Å¹Ì":
				return "CUSTOMCAVESPIDER";
			case "Á»¹ú·¹":
				return "CUSTOMSLIVERFISH";
			case "¿£´õÁøµå±â":
				return "CUSTOMENDERMITE";
			case "ÃÊ´ëÇü½½¶óÀÓ": case "Æ¯´ë½½¶óÀÓ": case "Å«½½¶óÀÓ": case "º¸Åë½½¶óÀÓ": case "ÀÛÀº½½¶óÀÓ":
				return "CUSTOMSLIME"; 
			case "Æ¯´ë¸¶±×¸¶Å¥ºê": case "Å«¸¶±×¸¶Å¥ºê": case "º¸Åë¸¶±×¸¶Å¥ºê": case "ÀÛÀº¸¶±×¸¶Å¥ºê": case "¸¶±×¸¶Å¥ºê":
				return "CUSTOMMAGMACUBE"; 
			case "ºí·¹ÀÌÁî":
				return "CUSTOMBLAZE";
			case "°¡½ºÆ®":
				return "CUSTOMGHAST";
			case "Á»ºñÇÇ±×¸Ç":
				return "CUSTOMPIGZOMBIE";
			case "¸¶³à":
				return "CUSTOMWITCH";
			case "À§´õ":
				return "CUSTOMWITHER";
			case "¿£´õµå·¡°ï":
				return "CUSTOMENDERDRAGON";
			case "¼öÈ£ÀÚ":
				return "CUSTOMGUARDIAN";
			case "¾ç":
				return "CUSTOMSHEEP";
			case "¼Ò":
				return "CUSTOMCOW";
			case "µÅÁö":
				return "CUSTOMPIG";
			case "¸»":
				return "CUSTOMHORSE";
			case "Åä³¢":
				return "CUSTOMRABBIT";
			case "¿À¼¿·Ô":
				return "CUSTOMOCELOT";
			case "´Á´ë":
				return "CUSTOMWOLF";
			case "´ß":
				return "CUSTOMCHICKEN";
			case "¹ö¼¸¼Ò":
				return "CUSTOMMOOSHROOM";
			case "¿ÀÂ¡¾î":
				return "CUSTOMSQUID";
			case "ÁÖ¹Î":
				return "CUSTOMVILLAGER";
			case "´«»ç¶÷":
				return "CUSTOMSNOWGOLEM";
			case "°ñ·½":
				return "CUSTOMIRONGOLEM";
			case "¹ÚÁã":
				return "CUSTOMBAT";
			case "¼ÈÄ¿":
				return "CUSTOMSHULKER";
			case "ºÏ±Ø°õ":
				return "CUSTOMPOLARBEAR";
			case "ÈÞ¸Õ":
				return "CUSTOMHUMAN";
			default:
				return "CUSTOMZOMBIE";
		}
	}
}